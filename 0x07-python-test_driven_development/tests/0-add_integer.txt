"""
This file contains tests for the add_integer function.
======================================================

First import add_integer from the 0-add_integer module:
-------------------------------------------------------

>>> add_integer = __import__('0-add_integer').add_integer

Basic cases:

>>> add_integer(3, 5)
8
>>> add_integer(-10, 7)
-3
>>> add_integer(-5, -8)
-13
>>> add_integer(2.5, 3.8)
5
>>> add_integer(4, "School")  #doctest: +IGNORE_EXCEPTION_DETAIL
Traceback (most recent call last):
    ...
TypeError: b must be an integer or float
>>> add_integer(None, 10)  #doctest: +IGNORE_EXCEPTION_DETAIL
Traceback (most recent call last):
    ...
TypeError: a must be an integer or float
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(34, 54, 67)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(float('-inf'), float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'), 0)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
"""
