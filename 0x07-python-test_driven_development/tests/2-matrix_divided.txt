"""
This file contains tests for the matrix_divided function.
======================================================

First import matrix_divided from the 2-matrix_divided module:
-------------------------------------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic cases:
------------

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [
...     [10, 20],
...     [30, 40],
...     [50, 60]
... ]
>>> matrix_divided(matrix, 2)
[[5.0, 10.0], [15.0, 20.0], [25.0, 30.0]]
>>> matrix
[[10, 20], [30, 40], [50, 60]]

Edge cases:
------------
 
>>> matrix_divided([], 2)
[]
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

Invalid input cases:
--------------------

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [3, "four"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

"""
